			  Z80 ASSEMBLER - ZASM VER 1.6
  06A2                	KNUMBS		EQU		06A2H
  06A4                	GETL		EQU		06A4H
  0A2E                	LETLN		EQU		0A2EH
  0889                	MSGPR		EQU		0889H
  0832                	GETKEY		EQU		0832H
  0562                	BREAK		EQU		0562H
  05F3                	PRTBYT		EQU		05F3H
  08C6                	PRNT		EQU		08C6H
  08C6                	DISPCH		EQU		08C6H
  08C6                	DPCT		EQU		08C6H
  1140                	IBUFE		EQU		1140H
  1141                	FNAME		EQU		1141H
  1152                	EADRS		EQU		1152H
  1152                	FSIZE		EQU		1152H
  1154                	SADRS		EQU		1154H
  1156                	EXEAD		EQU		1156H
  11D1                	DSPX		EQU		11D1H
  00B1                	MONITOR		EQU		00B1H
                      	;MZ-80B SB-1520用(SP-5520 MZ-LISP_80B)
                      	;LBUF		EQU		1093H
                      	;MBUF		EQU		109DH
                      	;MZ-2000 MZ-1Z001M用(MZ-1Z001 MZ-1Z002 MZ-LIST_2000)
  10AB                	LBUF		EQU		10ABH
  10B6                	MBUF		EQU		10B6H
                      	
                      	;0A0H PORTA 送信データ(下位4ビット)
                      	;0A1H PORTB 受信データ(8ビット)
                      	;
                      	;0A2H PORTC Bit
                      	;7 IN  CHK
                      	;6 IN
                      	;5 IN
                      	;4 IN 
                      	;3 OUT
                      	;2 OUT FLG
                      	;1 OUT
                      	;0 OUT
                      	;
                      	;0A3H コントロールレジスタ
                      	
  0000                	ENT:
                      	;		ORG		5200H     ;BASIC SB-5520
                      	;		ORG		5500H     ;BASIC MZ-1Z001
                      	;		ORG		6600H     ;BASIC MZ-1Z002
  3F20                			ORG		3F20H     ;MZ-LISP 80B or 2000
                      	
                      	;******************** MONITOR CMTルーチン代替 *************************************
  3F20  C3E342        	ENT1:	JP		MSHED
  3F23  C33043        	ENT2:	JP		MSDAT
  3F26  C36343        	ENT3:	JP		MLHED
  3F29  C34C44        	ENT4:	JP		MLDAT
  3F2C  C37E44        	ENT5:	JP		MVRFY
                      	
                      			
                      	;**** 8255初期化 ****
                      	;PORTC下位BITをOUTPUT、上位BITをINPUT、PORTBをINPUT、PORTAをOUTPUT
  3F2F  3E8A          	INIT:	LD		A,8AH
  3F31  D3A3          			OUT		(0A3H),A
                      	;出力BITをリセット
  3F33  3E00          	INIT2:	LD		A,00H      ;PORTA <- 0
  3F35  D3A0          			OUT		(0A0H),A
  3F37  D3A2          			OUT		(0A2H),A   ;PORTC <- 0
  3F39  C9            			RET
                      	
                      	;データ受信
  3F3A  ED5B5211      	DBRCV:	LD		DE,(FSIZE)
  3F3E  2A5411        			LD		HL,(SADRS)
  3F41  CD7F40        	DBRLOP:	CALL	RCVBYTE
  3F44  77            			LD		(HL),A
  3F45  1B            			DEC		DE
  3F46  7A            			LD		A,D
  3F47  B3            			OR		E
  3F48  23            			INC		HL
  3F49  20F6          			JR		NZ,DBRLOP   ;DE=0までLOOP
  3F4B  C9            			RET
                      	
  3F4C                	STSV2:                      ;ファイルネームの取得に失敗
  3F4C  115941        			LD		DE,MSG_FNAME
  3F4F  182E          			JR		ERRMSG
                      	
  3F51                	SVER0:
  3F51  D1            			POP		DE         ;CALL元STACKを破棄する
  3F52                	SVERR:
  3F52  FEF0          			CP		0F0H
  3F54  2005          			JR		NZ,ERR3
  3F56  117B41        			LD		DE,MSG_F0  ;SD-CARD INITIALIZE ERROR
  3F59  1824          			JR		ERRMSG
  3F5B  FEF1          	ERR3:	CP		0F1H
  3F5D  2005          			JR		NZ,ERR4
  3F5F  119441        			LD		DE,MSG_F1  ;NOT FIND FILE
  3F62  181B          			JR		ERRMSG
  3F64  FEF3          	ERR4:	CP		0F3H
  3F66  2005          			JR		NZ,ERR5
  3F68  11A241        			LD		DE,MSG_F3  ;FILE EXIST
  3F6B  1812          			JR		ERRMSG
  3F6D  FEF4          	ERR5:	CP		0F4H
  3F6F  2005          			JR		NZ,ERR99
  3F71  116B41        			LD		DE,MSG_CMD
  3F74  1809          			JR		ERRMSG
  3F76  CDF305        	ERR99:	CALL	PRTBYT
  3F79  CDC608        			CALL	PRNT
  3F7C  11D242        			LD		DE,MSG99   ;その他ERROR
  3F7F  CD8908        	ERRMSG:	CALL	MSGPR
  3F82  CD2E0A        			CALL	LETLN
  3F85  C3B100        	MON:	JP		MONITOR
                      	
                      	;ヘッダ送信
  3F88  E5            	HDSEND:	PUSH	HL
  3F89  0620          			LD		B,20H
  3F8B  7E            	SS1:	LD		A,(HL)     ;FNAME送信
  3F8C  CD9240        			CALL	SNDBYTE
  3F8F  23            			INC		HL
  3F90  05            			DEC		B
  3F91  20F8          			JR		NZ,SS1
  3F93  3E0D          			LD		A,0DH
  3F95  CD9240        			CALL	SNDBYTE
  3F98  E1            			POP		HL
  3F99  0610          			LD		B,10H
  3F9B  7E            	SS2:	LD		A,(HL)     ;PNAME送信
  3F9C  CD9240        			CALL	SNDBYTE
  3F9F  23            			INC		HL
  3FA0  05            			DEC		B
  3FA1  20F8          			JR		NZ,SS2
  3FA3  3E0D          			LD		A,0DH
  3FA5  CD9240        			CALL	SNDBYTE
  3FA8  215411        			LD		HL,SADRS   ;SADRS送信
  3FAB  7E            			LD		A,(HL)
  3FAC  CD9240        			CALL	SNDBYTE
  3FAF  23            			INC		HL
  3FB0  7E            			LD		A,(HL)
  3FB1  CD9240        			CALL	SNDBYTE
  3FB4  215211        			LD		HL,EADRS   ;EADRS送信
  3FB7  7E            			LD		A,(HL)
  3FB8  CD9240        			CALL	SNDBYTE
  3FBB  23            			INC		HL
  3FBC  7E            			LD		A,(HL)
  3FBD  CD9240        			CALL	SNDBYTE
  3FC0  215611        			LD		HL,EXEAD   ;EXEAD送信
  3FC3  7E            			LD		A,(HL)
  3FC4  CD9240        			CALL	SNDBYTE
  3FC7  23            			INC		HL
  3FC8  7E            			LD		A,(HL)
  3FC9  CD9240        			CALL	SNDBYTE
  3FCC  C9            			RET
                      	
                      	;データ送信
                      	;SADRSからEADRSまでを送信
  3FCD  2A5211        	DBSEND:	LD		HL,(EADRS)
  3FD0  EB            			EX		DE,HL
  3FD1  2A5411        			LD		HL,(SADRS)
  3FD4  7E            	DBSLOP:	LD		A,(HL)
  3FD5  CD9240        			CALL	SNDBYTE
  3FD8  7C            			LD		A,H
  3FD9  BA            			CP		D
  3FDA  2004          			JR		NZ,DBSLP1
  3FDC  7D            			LD		A,L
  3FDD  BB            			CP		E
  3FDE  2803          			JR		Z,DBSLP2   ;HL = DE までLOOP
  3FE0  23            	DBSLP1:	INC		HL
  3FE1  18F1          			JR		DBSLOP
  3FE3  C9            	DBSLP2:	RET
                      	
                      	
                      	;**** DIRLIST ****
  3FE4  13            	STLT:	INC		DE
  3FE5  21DE42        			LD		HL,DEFDIR         ;行頭に'*FD 'を付けることでカーソルを移動させリターンで実行できるように
  3FE8  010500        			LD		BC,DEND-DEFDIR
  3FEB  CDF53F        			CALL	DIRLIST
  3FEE  A7            			AND		A                 ;00以外ならERROR
  3FEF  C2523F        			JP		NZ,SVERR
  3FF2  C3853F        			JP		MON
                      	
                      	
                      	;**** DIRLIST本体 (HL=行頭に付加する文字列の先頭アドレス BC=行頭に付加する文字列の長さ) ****
                      	;****              戻り値 A=エラーコード ****
  3FF5                	DIRLIST:
  3FF5  3E83          			LD		A,83H      ;DIRLISTコマンド83Hを送信
  3FF7  CDD140        			CALL	STCD       ;コマンドコード送信
  3FFA  A7            			AND		A          ;00以外ならERROR
  3FFB  C27E40        			JP		NZ,DLRET
                      			
  3FFE  C5            			PUSH	BC
  3FFF  0621          			LD		B,21H
  4001  1A            	STLT1:	LD		A,(DE)
  4002  FE0D          			CP		0DH
  4004  2002          			JR		NZ,STLT2
  4006  3E00          			LD		A,00H
  4008  CD9240        	STLT2:	CALL	SNDBYTE           ;ページ指示を送信
  400B  13            			INC		DE
  400C  05            			DEC		B
  400D  20F2          			JR		NZ,STLT1
  400F  C1            			POP		BC
  4010                	DL1:
  4010  E5            			PUSH	HL
  4011  C5            			PUSH	BC
  4012  11AB10        			LD		DE,LBUF
  4015  EDB0          			LDIR
  4017  EB            			EX		DE,HL
  4018  CD7F40        	DL2:	CALL	RCVBYTE           ;'00H'を受信するまでを一行とする
  401B  FE00          			CP		00H
  401D  280C          			JR		Z,DL3
  401F  FEFF          			CP		0FFH              ;'0FFH'を受信したら終了
  4021  2815          			JR		Z,DL4
  4023  FEFE          			CP		0FEH              ;'0FEH'を受信したら一時停止して一文字入力待ち
  4025  2818          			JR		Z,DL5
  4027  77            			LD		(HL),A
  4028  23            			INC		HL
  4029  18ED          			JR		DL2
  402B  11AB10        	DL3:	LD		DE,LBUF           ;'00H'を受信したら一行分を表示して改行
  402E  CD8908        			CALL	MSGPR
  4031  CD2E0A        			CALL	LETLN
  4034  C1            			POP		BC
  4035  E1            			POP		HL
  4036  18D8          			JR		DL1
  4038  CD7F40        	DL4:	CALL	RCVBYTE           ;状態取得(00H=OK)
  403B  C1            			POP		BC
  403C  E1            			POP		HL
  403D  183F          			JR		DLRET
                      	
  403F  11AD41        	DL5:	LD		DE,MSG_KEY1        ;HIT ANT KEY表示
  4042  CD8908        			CALL	MSGPR
  4045  3E82          			LD		A,82H
  4047  CDC608        			CALL	DISPCH
  404A  11C441        			LD		DE,MSG_KEY2        ;HIT ANT KEY表示
  404D  CD8908        			CALL	MSGPR
  4050  CD2E0A        			CALL	LETLN
  4053  CD3208        	DL6:	CALL	GETKEY            ;1文字入力待ち
  4056  FE00          			CP		00H
  4058  28F9          			JR		Z,DL6
  405A  FE0B          			CP		0BH               ;SHIFT+BREAKで打ち切り
  405C  2816          			JR		Z,DL7
  405E  FE02          			CP		02H               ;カーソル↑で打ち切り
  4060  2808          			JR		Z,DL9
  4062  FE42          			CP		42H               ;「B」で前ページ
  4064  2810          			JR		Z,DL8
  4066  3E00          			LD		A,00H             ;それ以外で継続
  4068  180C          			JR		DL8
  406A  3E02          	DL9:	LD		A,02H            ;カーソル↑で打ち切ったときにカーソル2行上へ
  406C  CDC608        			CALL	DPCT
  406F  3E02          			LD		A,02H
  4071  CDC608        			CALL	DPCT
  4074  3EFF          	DL7:	LD		A,0FFH            ;0FFH中断コードを送信
  4076  CD9240        	DL8:	CALL	SNDBYTE
  4079  CD2E0A        			CALL	LETLN
  407C  189A          			JR		DL2
                      			
  407E                	DLRET:		
  407E  C9            			RET
                      			
                      	
                      	;**** 1BYTE受信 ****
                      	;受信DATAをAレジスタにセットしてリターン
  407F                	RCVBYTE:
  407F  CDB440        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  4082  DBA1          			IN		A,(0A1H)   ;PORTB -> A
  4084  F5            			PUSH 	AF
  4085  3E05          			LD		A,05H
  4087  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 1
  4089  CDBB40        			CALL	F2CHK      ;PORTC BIT7が0になるまでLOOP
  408C  3E04          			LD		A,04H
  408E  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 0
  4090  F1            			POP 	AF
  4091  C9            			RET
                      			
                      	;**** 1BYTE送信 ****
                      	;Aレジスタの内容をPORTA下位4BITに4BITずつ送信
  4092                	SNDBYTE:
  4092  F5            			PUSH	AF
  4093  1F            			RRA
  4094  1F            			RRA
  4095  1F            			RRA
  4096  1F            			RRA
  4097  E60F          			AND		0FH
  4099  CDA340        			CALL	SND4BIT
  409C  F1            			POP		AF
  409D  E60F          			AND		0FH
  409F  CDA340        			CALL	SND4BIT
  40A2  C9            			RET
                      	
                      	;**** 4BIT送信 ****
                      	;Aレジスタ下位4ビットを送信する
  40A3                	SND4BIT:
  40A3  D3A0          			OUT		(0A0H),A
  40A5  3E05          			LD		A,05H
  40A7  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 1
  40A9  CDB440        			CALL	F1CHK      ;PORTC BIT7が1になるまでLOOP
  40AC  3E04          			LD		A,04H
  40AE  D3A3          			OUT		(0A3H),A    ;PORTC BIT2 <- 0
  40B0  CDBB40        			CALL	F2CHK
  40B3  C9            			RET
                      			
                      	;**** BUSYをCHECK(1) ****
                      	; 82H BIT7が1になるまでLOP
  40B4  DBA2          	F1CHK:	IN		A,(0A2H)
  40B6  E680          			AND		80H        ;PORTC BIT7 = 1?
  40B8  28FA          			JR		Z,F1CHK
  40BA  C9            			RET
                      	
                      	;**** BUSYをCHECK(0) ****
                      	; 82H BIT7が0になるまでLOOP
  40BB  DBA2          	F2CHK:	IN		A,(0A2H)
  40BD  E680          			AND		80H        ;PORTC BIT7 = 0?
  40BF  20FA          			JR		NZ,F2CHK
  40C1  C9            			RET
                      	
                      	;****** FILE NAME 取得 (IN:DE コマンド文字の次の文字 OUT:HL ファイルネームの先頭)*********
  40C2  F5            	STFN:	PUSH	AF
  40C3  13            	STFN1:	INC		DE         ;ファイルネームまでスペース読み飛ばし
  40C4  1A            			LD		A,(DE)
  40C5  FE20          			CP		20H
  40C7  28FA          			JR		Z,STFN1
  40C9  FE30          			CP		30H        ;「0」以上の文字でなければエラーとする
  40CB  DA4C3F        			JP		C,STSV2
  40CE  EB            			EX		DE,HL
  40CF  F1            			POP		AF
  40D0  C9            			RET
                      	
                      	;**** コマンド送信 (IN:A コマンドコード)****
  40D1  CD9240        	STCD:	CALL	SNDBYTE    ;Aレジスタのコマンドコードを送信
  40D4  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  40D7  C9            			RET
                      	
                      	;**** ファイルネーム送信(IN:HL ファイルネームの先頭) ******
  40D8  0620          	STFS:	LD		B,20H
  40DA  7E            	STFS1:	LD		A,(HL)     ;FNAME送信
  40DB  CD9240        			CALL	SNDBYTE
  40DE  23            			INC		HL
  40DF  05            			DEC		B
  40E0  20F8          			JR		NZ,STFS1
  40E2  3E0D          			LD		A,0DH
  40E4  CD9240        			CALL	SNDBYTE
  40E7  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  40EA  C9            			RET
                      	
                      	;**** コマンド、ファイル名送信 (IN:A コマンドコード HL:ファイルネームの先頭)****
  40EB  CDC240        	STCMD:	CALL	STFN       ;ファイルネーム取得
  40EE  E5            			PUSH	HL
  40EF  CDD140        			CALL	STCD       ;コマンドコード送信
  40F2  E1            			POP		HL
  40F3  A7            			AND		A          ;00以外ならERROR
  40F4  C2513F        			JP		NZ,SVER0
  40F7  CDD840        			CALL	STFS       ;ファイルネーム送信
  40FA  A7            			AND		A          ;00以外ならERROR
  40FB  C2513F        			JP		NZ,SVER0
  40FE  C9            			RET
                      	
                      	;******** MESSAGE DATA ********************
  40FF                	MSG_LD:
  40FF  16            			DB		16H
  4100  4C4F4144494E47			DB		'LOADING '
  4108  0D            			DB		0DH
                      	
  4109                	WRMSG:
  4109  57524954494E47			DB		'WRITING '
  4111  0D            			DB		0DH
                      	
  4112                	MSG_SV:
  4112  53415645204649			DB		'SAVE FINISHED!'
  4120  0D            			DB		0DH
                      			
  4121                	MSG_AS:
  4121  41535441525420			DB		'ASTART FINISHED!'
  4131  0D            			DB		0DH
                      			
  4132                	MSG_ST:
  4132  50415443484544			DB		'PATCHED MONITOR START!'
  4148  0D            			DB		0DH
                      			
  4149                	MSG_AD:
  4149  41444452455353			DB		'ADDRESS FAILED!'
  4158  0D            			DB		0DH
                      			
  4159                	MSG_FNAME:
  4159  46494C45204E41			DB		'FILE NAME FAILED!'
  416A  0D            			DB		0DH
                      			
  416B                	MSG_CMD:
  416B  434F4D4D414E44			DB		'COMMAND FAILED!'
  417A  0D            			DB		0DH
                      			
  417B                	MSG_F0:
  417B  53442D43415244			DB		'SD-CARD INITIALIZE ERROR'
  4193  0D            			DB		0DH
                      			
  4194                	MSG_F1:
  4194  4E4F542046494E			DB		'NOT FIND FILE'
  41A1  0D            			DB		0DH
                      			
  41A2                	MSG_F3:
  41A2  46494C45204558			DB		'FILE EXIST'
  41AC  0D            			DB		0DH
                      			
  41AD                	MSG_KEY1:
  41AD  4E4558543A414E			DB		'NEXT:ANY BACK:B BREAK:'
  41C3  0D            			DB		0DH
  41C4                	MSG_KEY2:
  41C4  204F5220534849			DB		' OR SHIFT+BREAK'
  41D3  0D            			DB		0DH
                      			
  41D4                	MSG_DELQ:
  41D4  46494C45204445			DB		'FILE DELETE?(Y:OK ELSE:CANSEL)'
  41F2  0D            			DB		0DH
                      			
  41F3                	MSG_DELY:
  41F3  44454C45544520			DB		'DELETE OK'
  41FC  0D            			DB		0DH
                      			
  41FD                	MSG_DELN:
  41FD  44454C45544520			DB		'DELETE CANSEL'
  420A  0D            			DB		0DH
                      			
  420B                	MSG_REN:
  420B  4E4557204E414D			DB		'NEW NAME:                            '
  4230  0D            			DB		0DH
                      			
  4231                	MSG_DNAME:
  4231  444F532046494C			DB		'DOS FILE:'
  423A                	MSG_DNAMEEND:
  423A  20202020202020			DB		'                            '
  4256  0D            			DB		0DH
                      			
  4257                	MSG_RENY:
  4257  52454E414D4520			DB		'RENAME OK'
  4260  0D            			DB		0DH
                      			
  4261                	MSG_AD1:
  4261  41445253202B30			DB		'ADRS +0 +1 +2 +3 +4 +5 +6 +7 01234567'
  4286  0D            			DB		0DH
                      			
  4287                	MSG_AD2:
  4287  4E4558543A414E			DB		'NEXT:ANY BACK:B BREAK:SHIFT+BREAK'
  42A8  0D            			DB		0DH
                      			
  42A9                	MSG_CPY:
  42A9  434F5059204F4B			DB		'COPY OK'
  42B0  0D            			DB		0DH
                      			
  42B1                	MSG_FDW:
  42B1  2A46445720    			DB		'*FDW '
  42B6  0D            			DB		0DH
                      	
  42B7                	MSG_TYPE:
  42B7  545950453A    			DB		'TYPE:'
  42BC  0D            			DB		0DH
                      	
  42BD                	MSG_SADRS:
  42BD  53544152543A  			DB		'START:'
  42C3  0D            			DB		0DH
                      	
  42C4                	MSG_EADRS:
  42C4  454E443A      			DB		'END:'
  42C8  0D            			DB		0DH
                      	
  42C9                	MSG_XADRS:
  42C9  45584543555445			DB		'EXECUTE:'
  42D1  0D            			DB		0DH
                      	
  42D2                	MSG99:
  42D2  204552524F52  			DB		' ERROR'
  42D8  0D            			DB		0DH
                      			
  42D9                	DEFNAME:
  42D9  30303030      			DB		'0000'
  42DD  0D            			DB		0DH
  42DE                	NEND:
                      	
  42DE                	DEFDIR:
  42DE  2A46442020    			DB		'*FD  '
  42E3                	DEND:
                      	
                      	;*********************** 0436H MONITOR ライト インフォメーション代替処理 ************
  42E3                	MSHED:
  42E3  D5            			PUSH	DE
  42E4  C5            			PUSH	BC
  42E5  E5            			PUSH	HL
  42E6  CD2F3F        			CALL	INIT
  42E9  3E91          			LD		A,91H      ;HEADER SAVEコマンド91H
  42EB  CD8044        			CALL	MCMD       ;コマンドコード送信
  42EE  A7            			AND		A          ;00以外ならERROR
  42EF  C28C44        			JP		NZ,MERR
                      	
                      	;S-OS SWORD、8080用テキスト・エディタ＆アセンブラはファイルネームの後ろが20h詰めとなるため0dhに修正
  42F2  0611          			LD		B,11H
  42F4  215111        			LD		HL,FNAME+10H     ;ファイルネーム
  42F7  3E0D          			LD		A,0DH            ;17文字目には常に0DHをセットする
  42F9  77            			LD		(HL),A
  42FA  7E            	MSH0:	LD		A,(HL)
  42FB  FE0D          			CP		0DH              ;0DHであればひとつ前の文字の検査に移る
  42FD  2807          			JR		Z,MSH1
  42FF  FE20          			CP		20H              ;20Hであれば0DHをセットしてひとつ前の文字の検査に移る
  4301  2007          			JR		NZ,MSH2          ;0DH、20H以外の文字であれば終了
  4303  3E0D          			LD		A,0DH
  4305  77            			LD		(HL),A
                      			
  4306  2B            	MSH1:	DEC		HL
  4307  05            			DEC		B
  4308  20F0          			JR		NZ,MSH0
                      	
  430A  CD2E0A        	MSH2:	CALL	LETLN
  430D  110941        			LD		DE,WRMSG   ;'WRITING '
  4310  CD8908        			CALL	MSGPR        ;メッセージ表示
  4313  114111        			LD		DE,FNAME     ;ファイルネーム
  4316  CD8908        			CALL	MSGPR       ;メッセージ表示
                      	
  4319  214011        			LD		HL,IBUFE
  431C  0680          			LD		B,80H
  431E  7E            	MSH3:	LD		A,(HL)     ;インフォメーション ブロック送信
  431F  CD9240        			CALL	SNDBYTE
  4322  23            			INC		HL
  4323  05            			DEC		B
  4324  20F8          			JR		NZ,MSH3
                      	
  4326  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  4329  A7            			AND		A          ;00以外ならERROR
  432A  C28C44        			JP		NZ,MERR
                      	
  432D  C38744        			JP		MRET       ;正常RETURN
                      	
                      	;******************** 0475H MONITOR ライト データ代替処理 **********************
  4330                	MSDAT:
  4330  D5            			PUSH	DE
  4331  C5            			PUSH	BC
  4332  E5            			PUSH	HL
  4333  3E92          			LD		A,92H      ;DATA SAVEコマンド92H
  4335  CD8044        			CALL	MCMD       ;コマンドコード送信
  4338  A7            			AND		A          ;00以外ならERROR
  4339  C28C44        			JP		NZ,MERR
                      	
  433C  215211        			LD		HL,FSIZE   ;FSIZE送信
  433F  7E            			LD		A,(HL)
  4340  CD9240        			CALL	SNDBYTE
  4343  23            			INC		HL
  4344  7E            			LD		A,(HL)
  4345  CD9240        			CALL	SNDBYTE
                      	
  4348  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  434B  A7            			AND		A          ;00以外ならERROR
  434C  C28C44        			JP		NZ,MERR
                      	
  434F  ED5B5211      			LD		DE,(FSIZE)
  4353  2A5411        			LD		HL,(SADRS)
  4356  7E            	MSD1:	LD		A,(HL)
  4357  CD9240        			CALL	SNDBYTE      ;SADRSからFSIZE Byteを送信。分割セーブの場合、直前に0436HでOPENされたファイルを対象として256バイトずつ0475HがCALLされる。
  435A  1B            			DEC		DE
  435B  7A            			LD		A,D
  435C  B3            			OR		E
  435D  23            			INC		HL
  435E  20F6          			JR		NZ,MSD1
                      			
  4360  C38744        			JP		MRET       ;正常RETURN
                      	
                      	;************************** 04D8H MONITOR リード インフォメーション代替処理 *****************
  4363                	MLHED:
  4363  D5            			PUSH	DE
  4364  C5            			PUSH	BC
  4365  E5            			PUSH	HL
  4366  CD2F3F        			CALL	INIT
                      	
  4369  0608          			LD		B,08H      ;LBUFを0DHで埋めファイルネームが指定されなかったことにする
  436B  11AB10        			LD		DE,LBUF
  436E  3E0D          			LD		A,0DH
  4370  12            	MLH0:	LD		(DE),A
  4371  13            			INC		DE
  4372  05            			DEC		B
  4373  20FB          			JR		NZ,MLH0
                      	
  4375  3E03          			LD		A,03H          ;一行分をクリアするため3文字削除、37文字出力
  4377  32D111        			LD		(DSPX),A
  437A  3E07          			LD		A,07H
  437C  CDC608        			CALL	DPCT
  437F  CDC608        			CALL	DPCT
  4382  CDC608        			CALL	DPCT
  4385  113142        	MLH6:	LD		DE,MSG_DNAME   ;'DOS FILE:'
  4388  CD8908        			CALL	MSGPR
  438B  3E09          			LD		A,09H          ;カーソルを9文字目に戻す
  438D  32D111        			LD		(DSPX),A
                      	
  4390  11B610        			LD		DE,MBUF    ;ファイルネームを指示するための苦肉の策。LOADコマンドとしてはファイルネームなしとして改行したのちに行バッファの位置をずらしてDOSファイルネームを入力する。
  4393  3E27          			LD		A,39
  4395  32A206        			LD		(KNUMBS),A
  4398  CDA406        			CALL	GETL
                      			
  439B  11BF10        			LD		DE,MBUF+9
                      			
  439E  1A            			LD		A,(DE)
                      	;**** ファイルネームの先頭が'*'なら拡張コマンド処理へ移行 ****
  439F  FE2A          			CP		'*'
  43A1  2845          			JR		Z,MLHCMD
                      	
  43A3  3E93          			LD		A,93H      ;HEADER LOADコマンド93H
  43A5  CD8044        			CALL	MCMD       ;コマンドコード送信
  43A8  A7            			AND		A          ;00以外ならERROR
  43A9  C28C44        			JP		NZ,MERR
                      	
  43AC                	MLH1:
  43AC  1A            			LD		A,(DE)
  43AD  FE20          			CP		20H                 ;行頭のスペースをファイルネームまで読み飛ばし
  43AF  2003          			JR		NZ,MLH2
  43B1  13            			INC		DE
  43B2  18F8          			JR		MLH1
                      	
  43B4  0620          	MLH2:	LD		B,20H
  43B6  1A            	MLH4:	LD		A,(DE)     ;FNAME送信
  43B7  CD9240        			CALL	SNDBYTE
  43BA  13            			INC		DE
  43BB  05            			DEC		B
  43BC  20F8          			JR		NZ,MLH4
  43BE  3E0D          			LD		A,0DH
  43C0  CD9240        			CALL	SNDBYTE
                      			
  43C3  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  43C6  A7            			AND		A          ;00以外ならERROR
  43C7  C28C44        			JP		NZ,MERR
                      	
  43CA  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  43CD  A7            			AND		A          ;00以外ならERROR
  43CE  C28C44        			JP		NZ,MERR
                      	
  43D1  214011        			LD		HL,IBUFE
  43D4  0680          			LD		B,80H
  43D6  CD7F40        	MLH5:	CALL	RCVBYTE    ;読みだされたインフォメーションブロックを受信
  43D9  77            			LD		(HL),A
  43DA  23            			INC		HL
  43DB  05            			DEC		B
  43DC  20F8          			JR		NZ,MLH5
                      	
  43DE  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  43E1  A7            			AND		A          ;00以外ならERROR
  43E2  C28C44        			JP		NZ,MERR
                      	
  43E5  C38744        			JP		MRET       ;正常RETURN
                      	
                      	;**************************** アプリケーション内SD-CARD操作処理 **********************
  43E8                	MLHCMD:
                      	;**** HL、DE、BCレジスタを保存 ****
  43E8  E5            			PUSH	HL
  43E9  D5            			PUSH	DE
  43EA  C5            			PUSH	BC
  43EB  13            			INC		DE
  43EC  0603          			LD		B,03H
                      	;**** FDLコマンド ****
  43EE  214844        			LD		HL,CMD1
  43F1  CD3444        			CALL	CMPSTR
  43F4  2805          			JR		Z,MLHCMD2
  43F6  C1            			POP		BC
  43F7  D1            			POP		DE
  43F8  E1            			POP		HL
                      	;**** ファイルネーム入力へ復帰 ****
  43F9  188A          			JR		MLH6
                      	
  43FB                	MLHCMD2:
  43FB  13            			INC		DE
  43FC  13            			INC		DE
  43FD  13            			INC		DE
  43FE  213142        			LD		HL,MSG_DNAME         ;行頭に'DOS FILE:'を付けることでカーソルを移動させリターンで実行できるように
  4401  010900        			LD		BC,MSG_DNAMEEND-MSG_DNAME
                      	;**** FDLコマンド呼び出し ****
  4404  CDF53F        			CALL	DIRLIST
  4407  A7            			AND		A          ;00以外ならERROR
  4408  2006          			JR		NZ,SERR
  440A  C1            			POP		BC
  440B  D1            			POP		DE
  440C  E1            			POP		HL
                      	;**** ファイルネーム入力へ復帰 ****
  440D  C38543        			JP		MLH6
                      	
                      	;******* アプリケーション内SD-CARD操作処理用ERROR処理 **************
  4410                	SERR:
  4410  FEF0          			CP		0F0H
  4412  2005          			JR		NZ,SERR3
  4414  117B41        			LD		DE,MSG_F0
  4417  180F          			JR		SERRMSG
                      			
  4419  FEF1          	SERR3:	CP		0F1H
  441B  2005          			JR		NZ,SERR99
  441D  119441        			LD		DE,MSG_F1
  4420  1806          			JR		SERRMSG
                      			
  4422  CDF305        	SERR99:	CALL	PRTBYT
  4425  11D242        			LD		DE,MSG99
                      			
  4428                	SERRMSG:
  4428  CD8908        			CALL	MSGPR
  442B  CD2E0A        			CALL	LETLN
  442E  C1            			POP		BC
  442F  D1            			POP		DE
  4430  E1            			POP		HL
                      	;**** ファイルネーム入力へ復帰 ****
  4431  C38543        			JP		MLH6
                      	
                      	;**** コマンド文字列比較 ****
  4434                	CMPSTR:
  4434  C5            			PUSH	BC
  4435  D5            			PUSH	DE
  4436  1A            	CMP1:	LD		A,(DE)
  4437  BE            			CP		(HL)
  4438  200B          			JR		NZ,CMP2
  443A  05            			DEC		B
  443B  2808          			JR		Z,CMP2
  443D  FE0D          			CP		0Dh
  443F  2804          			JR		Z,CMP2
  4441  13            			INC		DE
  4442  23            			INC		HL
  4443  18F1          			JR		CMP1
  4445  D1            	CMP2:	POP		DE
  4446  C1            			POP		BC
  4447  C9            			RET
                      	
                      	;**** コマンドリスト ****
                      	; 将来拡張用
  4448  46444C0D      	CMD1:	DB		'FDL',0DH
                      	
                      	
                      	;**************************** 04F8H MONITOR リード データ代替処理 ********************
  444C                	MLDAT:
  444C  D5            			PUSH	DE
  444D  C5            			PUSH	BC
  444E  E5            			PUSH	HL
  444F  3E94          			LD		A,94H      ;DATA LOADコマンド94H
  4451  CD8044        			CALL	MCMD       ;コマンドコード送信
  4454  A7            			AND		A          ;00以外ならERROR
  4455  C28C44        			JP		NZ,MERR
                      	
  4458  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  445B  A7            			AND		A          ;00以外ならERROR
  445C  C28C44        			JP		NZ,MERR
                      	
  445F  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  4462  A7            			AND		A          ;00以外ならERROR
  4463  C28C44        			JP		NZ,MERR
                      	
  4466  115211        			LD		DE,FSIZE   ;FSIZE送信
  4469  1A            			LD		A,(DE)
  446A  CD9240        			CALL	SNDBYTE
  446D  13            			INC		DE
  446E  1A            			LD		A,(DE)
  446F  CD9240        			CALL	SNDBYTE
  4472  CD3A3F        			CALL	DBRCV      ;FSIZE分のデータを受信し、SADRSから格納。分割ロードの場合、直前に0436HでOPENされたファイルを対象として256バイトずつSADRSが加算されて04F8HがCALLされる。
                      	
  4475  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  4478  A7            			AND		A          ;00以外ならERROR
  4479  C28C44        			JP		NZ,MERR
                      	
  447C  1809          			JR		MRET       ;正常RETURN
                      	
                      	;************************** 0588H VRFY CMT ベリファイ代替処理 *******************
  447E  AF            	MVRFY:	XOR		A          ;正常終了フラグ
                      	
  447F  C9            			RET
                      	
                      	;******* 代替処理用コマンドコード送信 (IN:A コマンドコード) **********
  4480                	MCMD:
  4480  CD9240        			CALL	SNDBYTE    ;コマンドコード送信
  4483  CD7F40        			CALL	RCVBYTE    ;状態取得(00H=OK)
  4486  C9            			RET
                      	
                      	;****** 代替処理用正常RETURN処理 **********
  4487  E1            	MRET:	POP		HL
  4488  C1            			POP		BC
  4489  D1            			POP		DE
  448A  AF            			XOR		A          ;正常終了フラグ
                      			
  448B  C9            			RET
                      	
                      	;******* 代替処理用ERROR処理 **************
  448C                	MERR:
  448C  FEF0          			CP		0F0H
  448E  2005          			JR		NZ,MERR3
  4490  117B41        			LD		DE,MSG_F0
  4493  180F          			JR		MERRMSG
                      			
  4495  FEF1          	MERR3:	CP		0F1H
  4497  2005          			JR		NZ,MERR99
  4499  119441        			LD		DE,MSG_F1
  449C  1806          			JR		MERRMSG
                      			
  449E  CDF305        	MERR99:	CALL	PRTBYT
  44A1  11D242        			LD		DE,MSG99
                      			
  44A4                	MERRMSG:
  44A4  CD8908        			CALL	MSGPR
  44A7  CD2E0A        			CALL	LETLN
  44AA  E1            			POP		HL
  44AB  C1            			POP		BC
  44AC  D1            			POP		DE
  44AD  3E02          			LD		A,02H
  44AF  37            			SCF
                      	
  44B0  C9            			RET
                      	
  44B1                	ENT6:
  44B1                			END
